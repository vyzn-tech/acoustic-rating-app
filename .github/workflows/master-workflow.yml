name: Trigger build and image upload to docker container

on:
  push:
    branches:
      - master
      - "*"
  # Allow manually trigger
  workflow_dispatch:

jobs:
  build_upload_images_non_prod:
    strategy:
      max-parallel: 1
      matrix:
        service: [ gui, service ]
    runs-on: ubuntu-latest
    environment:
      name: dbs.dev
    outputs:
      deploy_version: ${{ steps.date.outputs.date }}
    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%dT%H%M%SZ')"

      - name: Set docker image version
        id: deploy-version
        run: |
          echo "DEPLOY_VERSION=${{ steps.date.outputs.date }}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to container registry
        uses: docker/login-action@v1
        with:
          registry: dbsdockerregistry.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: dbsdockerregistry.azurecr.io/acoustic-rating-${{ matrix.service }}:${{ env.DEPLOY_VERSION }}
          file: ./.devops/docker/${{ matrix.service }}/Dockerfile
          build-args: PRODUCTION_BUILD=true

  dev_deploy:
    strategy:
      max-parallel: 1
      matrix:
        service: [ gui, service ]
    runs-on: ubuntu-latest
    needs: build_upload_images_non_prod
    environment:
      name: dbs.dev
    steps:
      - uses: actions/checkout@v2

      - name: Login to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Load common AppSettings
        run: |
          echo 'COMMON_APP_SETTINGS<<EOF' >> $GITHUB_ENV
          cat ./.devops/azure/config/azureContainerProperties-common.json >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Load DEV AppSettings
        run: |
          echo 'DEV_APP_SETTINGS<<EOF' >> $GITHUB_ENV
          cat ./.devops/azure/config/azureContainerProperties-dev.json >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Deploy common AppSettings
        uses: azure/appservice-settings@v1
        with:
          app-name: acoustic-rating-${{ matrix.service }}
          mask-inputs: false
          app-settings-json: ${{ env.COMMON_APP_SETTINGS }}

      - name: Deploy DEV AppSettings
        uses: azure/appservice-settings@v1
        with:
          app-name: acoustic-rating-${{ matrix.service }}-dev
          mask-inputs: false
          app-settings-json: ${{ env.DEV_APP_SETTINGS }}

      - name: Deploy acoustic-rating-${{ matrix.service }}-dev
        uses: azure/webapps-deploy@v2
        with:
          app-name: acoustic-rating-${{ matrix.service }}-dev
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: dbsdockerregistry.azurecr.io/acoustic-rating-${{ matrix.service }}:${{needs.build_upload_images_non_prod.outputs.deploy_version}}

  test_deploy:
    strategy:
      max-parallel: 1
      matrix:
        service: [ gui, service ]
    runs-on: ubuntu-latest
    needs: [ build_upload_images_non_prod, dev_deploy ]
    environment:
      name: dbs.test
    steps:
      - uses: actions/checkout@v2

      - name: Login to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Load common AppSettings
        run: |
          echo 'COMMON_APP_SETTINGS<<EOF' >> $GITHUB_ENV
          cat ./.devops/azure/config/azureContainerProperties-common.json >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Load TEST AppSettings
        run: |
          echo 'TEST_APP_SETTINGS<<EOF' >> $GITHUB_ENV
          cat ./.devops/azure/config/azureContainerProperties-test.json >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Deploy common AppSettings
        uses: azure/appservice-settings@v1
        with:
          app-name: acoustic-rating-${{ matrix.service }}-test
          mask-inputs: false
          app-settings-json: ${{ env.COMMON_APP_SETTINGS }}

      - name: Deploy TEST AppSettings
        uses: azure/appservice-settings@v1
        with:
          app-name: acoustic-rating-${{ matrix.service }}-test
          mask-inputs: false
          app-settings-json: ${{ env.TEST_APP_SETTINGS }}

      - name: Deploy acoustic-rating-${{ matrix.service }}-test
        uses: azure/webapps-deploy@v2
        with:
          app-name: acoustic-rating-${{ matrix.service }}-test
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: dbsdockerregistry.azurecr.io/acoustic-rating-${{ matrix.service }}:${{needs.build_upload_images_non_prod.outputs.deploy_version}}
